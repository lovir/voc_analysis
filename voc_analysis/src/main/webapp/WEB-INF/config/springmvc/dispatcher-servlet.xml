<?xml version="1.0" encoding="UTF-8"?>
<!--
    - DispatcherServlet application context for Application's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!--
        - The controllers are autodetected POJOs labeled with the @Controller annotation.
    -->
    <context:component-scan base-package="com.diquest.voc">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
    
    <!--
        - The form-based controllers within this application provide @RequestMapping 
        - annotations at the type level for path mapping URLs and @RequestMapping 
        - at the method level for request type mappings (e.g., GET and POST). 
        - In contrast, ClinicController - which is not form-based - provides 
        - @RequestMapping only at the method level for path mapping URLs.
        -
        - DefaultAnnotationHandlerMapping is driven by these annotations and is 
        - enabled by default with Java 5+.
    -->

    <!--
        - This bean processes annotated handler methods, applying Application-specific PropertyEditors
        - for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.
     -->
     
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
		<list>
		<ref bean="jacksonMessageConverter"/>
		</list>
		</property>
	</bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    
    <!--
        - This bean resolves specific types of exceptions to corresponding logical 
        - view names for error views. The default behaviour of DispatcherServlet 
        - is to propagate all exceptions to the servlet container: this will happen 
        - here with all other types of exceptions.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="common"/>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">common/dataAccessFailure</prop>
                <prop key="org.springframework.transaction.TransactionException">common/transactionFailure</prop>
                <prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">common/bizError</prop>
                <prop key="org.springframework.security.AccessDeniedException">common/accessDenied</prop>
                <prop key="java.lang.Exception">common/error</prop>
            </props>
        </property>
    </bean>
	
<!-- 	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:layouts/layouts.xml</value>
				 TODO tiles definition 추가
			</list>
		</property>
	</bean> -->
	
    <!--
        - This bean configures the 'prefix' and 'suffix' properties of 
        - InternalResourceViewResolver, which resolves logical view names 
        - returned by Controllers. For egovframework, a logical view name of "vets" 
        - will be mapped to "/WEB-INF/jsp/vets.jsp".
    -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" 
    p:viewClass="org.springframework.web.servlet.view.JstlView" 
    p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>

    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
        - Could also reside in the root application context, as it is generic,
        - but is currently just used within Application's web tier.
    
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
            p:basename="messages"/>
    -->
    
    	<!-- Tiles 사용 설정 -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<property name="order" value="0" />
	</bean>
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/config/springmvc/tiles-defs.xml</value>
				<!--  TODO tiles definition 추가 -->
			</list>
		</property>
	</bean>
	
	
	<!-- For Pagination Tag -->
    <bean id="imageRenderer" class="com.diquest.voc.cmmn.EgovImgPaginationRenderer"/>

    <bean id="paginationManager" class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager">
        <property name="rendererType">
            <map>
                <entry key="image" value-ref="imageRenderer"/> 
            </map>
        </property>
    </bean>
	<!-- /For Pagination Tag -->
	
	<!--  excel start -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="0" />
    </bean>
    
    <bean id="docExcelView" class="com.diquest.voc.cmmn.EgovExcel" />
    <!--  excel end -->
    
    <mvc:annotation-driven />
    
    <!--  interceptor start -->
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/dashBoard/*Init.do" />
    		<mvc:mapping path="/keywordRanking/*Init.do" />
    		<mvc:mapping path="/stationStatus/*Init.do" />
    		<mvc:mapping path="/emotion/*Init.do" />
    		<mvc:mapping path="/trend/*Init.do" />
    		<mvc:mapping path="/relationAnalysis/*Init.do" />
    		<mvc:mapping path="/socialKeywordRanking/*Init.do" />
    		<mvc:mapping path="/socialChannelStatus/*Init.do" />
    		<mvc:mapping path="/socialEmotion/*Init.do" />
    		<mvc:mapping path="/socialRelationAnalysis/*Init.do" />
    		<mvc:mapping path="/socialTrend/*Init.do" />
    		<mvc:mapping path="/management/interestKeywordInit.do" />
    		<mvc:mapping path="/management/userDictionaryInit.do" />
    		<mvc:mapping path="/management/thesaurusDictionaryInit.do" />
    		<mvc:mapping path="/management/openApi/openApiInit.do" />
    		<mvc:mapping path="/management/openapi/externalOpenApiInit.do" />
    		<mvc:mapping path="/common/*login.do" />
    		<bean class="com.diquest.voc.common.interceptor.UserAuthInterceptor" />
    	</mvc:interceptor>
    </mvc:interceptors>
    <!--  interceptor end -->
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
</beans>